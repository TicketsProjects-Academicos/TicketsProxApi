// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketsProxApi.Data;

#nullable disable

namespace TicketsProxApi.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("TicketsProxApi.Models.Clientes", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Identificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TicketsProxApi.Models.CompraTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadTickets")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaquillaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EventoId");

                    b.ToTable("CompraTickets");
                });

            modelBuilder.Entity("TicketsProxApi.Models.Eventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadTotal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hora")
                        .HasColumnType("TEXT");

                    b.Property<string>("LugarEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoEvento")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("TicketsProxApi.Models.EventosCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EventosClientes");
                });

            modelBuilder.Entity("TicketsProxApi.Models.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientesIdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompraTicketsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientesIdCliente");

                    b.HasIndex("CompraTicketsId");

                    b.HasIndex("EventoId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketsProxApi.Models.CompraTickets", b =>
                {
                    b.HasOne("TicketsProxApi.Models.Clientes", "Cliente")
                        .WithMany("CompraTickets")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketsProxApi.Models.Eventos", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("TicketsProxApi.Models.Eventos", b =>
                {
                    b.HasOne("TicketsProxApi.Models.EventosCliente", "Cliente")
                        .WithMany("Eventos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TicketsProxApi.Models.Tickets", b =>
                {
                    b.HasOne("TicketsProxApi.Models.Clientes", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ClientesIdCliente");

                    b.HasOne("TicketsProxApi.Models.CompraTickets", null)
                        .WithMany("Taquilla")
                        .HasForeignKey("CompraTicketsId");

                    b.HasOne("TicketsProxApi.Models.Eventos", "Evento")
                        .WithMany("Tickets")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("TicketsProxApi.Models.Clientes", b =>
                {
                    b.Navigation("CompraTickets");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketsProxApi.Models.CompraTickets", b =>
                {
                    b.Navigation("Taquilla");
                });

            modelBuilder.Entity("TicketsProxApi.Models.Eventos", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketsProxApi.Models.EventosCliente", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
